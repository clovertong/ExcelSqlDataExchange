<UserControl x:Class="ExcelSqlDataExchange.Form.QueryTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewModels="clr-namespace:ExcelSqlDataExchange.ViewModel"
             d:DataContext="{d:DesignInstance viewModels:QueryViewModel}" 
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="900">
    <UserControl.Resources>
        <!--Style-->
        <Style x:Key="Label" TargetType="Label">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style x:Key="LabelLight" TargetType="Label">
            <Setter Property="Margin" Value="5 0 0 0"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style x:Key="Button" TargetType="Button">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Foreground" Value="#665f70"/>
            <Setter Property="Background" Value="#fdfab8"/>
        </Style>
        <Style x:Key="Combo" TargetType="ComboBox">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=UpdateOption,Path=SelectedValue}" Value="Export Data by UserInput" >
                    <Setter Property="Visibility" Value="Hidden"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Data" TargetType="DataGrid">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=UpdateOption,Path=SelectedValue}" Value="Export Data by UserInput" >
                    <Setter Property="Visibility" Value="Hidden"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Panel1" TargetType="StackPanel">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=ExportOption,Path=SelectedValue}" Value="Export Data by User Input" >
                    <Setter Property="Visibility" Value="Hidden"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Panel2" TargetType="StackPanel">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=ExportOption,Path=SelectedValue}" Value="Export all the Data" >
                    <Setter Property="Visibility" Value="Hidden"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="dockPanel1" TargetType="DockPanel">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=ExportOption,Path=SelectedValue}" Value="Export all the Data" >
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RoundCorner" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="AliceBlue"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" Background="#6B705C" CornerRadius="10" BorderBrush="#B7B7A4" BorderThickness="2">
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#A5A58D"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#A5A58D"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundCorner2" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="AliceBlue"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" Background="#6B705C" CornerRadius="10" BorderBrush="#B7B7A4" BorderThickness="2">
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#A5A58D"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#A5A58D"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=ExportOption,Path=SelectedValue}" Value="Export Data by User Input" >
                    <Setter Property="Visibility" Value="Hidden"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>
    <Grid Background="#A5A58D" >
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="0.7*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="3.3*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1.3*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1.3*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1.4*"/>
        </Grid.ColumnDefinitions>

        <DockPanel HorizontalAlignment="Left" Grid.Column="0"  Grid.ColumnSpan="6" Margin="10,10,0,10" Height="40" >
            <Label Content="How do you want to Export the data?" Style="{StaticResource Label}" />
            <ComboBox Name="ExportOption" Margin="5 5 5 5"  SelectedValuePath="Content"  Text="{Binding ExportOption,Mode=TwoWay}" Width="180" >
                <ComboBoxItem Content="Export all the Data"/>
                <ComboBoxItem Content="Export Data by User Input"/>
            </ComboBox>
        </DockPanel>
        <StackPanel Grid.Row="0" Grid.Column="5" Height="40"  >
            <Button HorizontalAlignment="Right"  Margin="5 6 20 6" Name="Export" Content="Export" Style="{StaticResource RoundCorner}" ToolTip="Export Data to  Excel File"  Command="{Binding Path=Export}" Height="30" Width="100" />
        </StackPanel>
        <DockPanel HorizontalAlignment="Left" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="6" Margin="10,0,0,0" Style="{StaticResource dockPanel1}"  >
            <Label Margin="5 5 5 0"  Content="Search By" Style="{StaticResource Label}"/>
            <ComboBox Name="SelectionOption" Margin="5 5 5 5"  SelectedValuePath="Content"  Text="{Binding SearchKeyWord,Mode=TwoWay}" Width="155"   >
                <ComboBoxItem Content="Equipment ID"/>
                <ComboBoxItem Content="Building"/>
            </ComboBox>
            <Label Margin="40 5 5 0"  Content="Value" Style="{StaticResource Label}"/>
            <TextBox Margin="0 5 5 5"  x:Name="Building" Text="{Binding SerachValue, Mode=TwoWay}"  Width="114" />
            <Label Margin="40 5 5 0"  Content="Filter Parameters:" Style="{StaticResource Label}"/>
            <Label Margin="0 7 5 0"  Content="Select All" Style="{StaticResource LabelLight}"  />
            <CheckBox x:Name="SelectAll" Margin=" 0 12 0 0"  IsChecked="{Binding SelectAll,Mode=TwoWay}" />
            <Label Margin="30 7 5 0"  Content="Select None" Style="{StaticResource LabelLight}"/>
            <CheckBox x:Name="SelectNone" Margin=" 0 12 0 0"  IsChecked="{Binding SelectNone,Mode=TwoWay}" />
        </DockPanel>

        <!--Show when Select Export All to Excel--> 
        <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="6" Grid.RowSpan="5" Margin="10 20 " Style="{StaticResource Panel1}">
            <DataGrid HorizontalAlignment="Left" Name="mydatagrid" Margin="0 0 0 0" VerticalAlignment="Top" FontStretch="Expanded" Height="Auto" Width="Auto" ItemsSource="{Binding Path=DataGrid,Mode=TwoWay,NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}" />
        </StackPanel>

        <!--Show when Select User Input -->
        <!--General Information-->
        <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="6" Margin="10 10 10 0" Style="{StaticResource Panel2}">
            <Label Content="Equipment General Information" Style="{StaticResource Label}"/>
        </StackPanel>
        <StackPanel Grid.Row="3" Grid.Column="0"   Margin="10 5 0 0" Style="{StaticResource Panel2}">
            <Label Content="ID" Style="{StaticResource LabelLight}"/>
            <Label Content="Name" Style="{StaticResource LabelLight}"/>
            <Label Content="Type" Style="{StaticResource LabelLight}"/>
            <Label Content="Bar Code" Style="{StaticResource LabelLight}"/>
        </StackPanel>
        <StackPanel Grid.Row="3" Grid.Column="1"   Margin="10 5 10 0" Style="{StaticResource Panel2}">
            <CheckBox x:Name="IDCheck" Margin=" 0 5 0 0"  IsChecked="{Binding IDCheck,Mode=TwoWay}" />
            <CheckBox x:Name="NameCheck" Margin=" 0 12 0 0"  IsChecked="{Binding NameCheck,Mode=TwoWay}" />
            <CheckBox x:Name="TypeCheck" Margin=" 0 12 0 0"  IsChecked="{Binding TypeCheck,Mode=TwoWay}" />
            <CheckBox x:Name="BarCodeCheck" Margin=" 0 12 0 0"  IsChecked="{Binding BarCodeCheck,Mode=TwoWay}" />
        </StackPanel>
        <!--Location-->
        <StackPanel Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" Margin="10 10 0 0" Style="{StaticResource Panel2}">
            <Label Content="Location" Style="{StaticResource Label}"/>
        </StackPanel>
        <StackPanel Grid.Row="3" Grid.Column="2"  Margin="10 5 0 0" Style="{StaticResource Panel2}">
            <Label Content="Building" Style="{StaticResource LabelLight}"/>
            <Label Content="Level" Style="{StaticResource LabelLight}"/>
            <Label Content="Room" Style="{StaticResource LabelLight}"/>
            <Label Content="Zone" Style="{StaticResource LabelLight}"/>
        </StackPanel>
        <StackPanel Grid.Row="3" Grid.Column="3"  Margin="10 5 10 0" Style="{StaticResource Panel2}">
            <CheckBox x:Name="BuildingCheck" Margin=" 0 5 0 0"  IsChecked="{Binding BuildingCheck,Mode=TwoWay}" />
            <CheckBox x:Name="LevelCheck" Margin=" 0 12 0 0"  IsChecked="{Binding LevelCheck,Mode=TwoWay}" />
            <CheckBox x:Name="RoomCheck" Margin=" 0 12 0 0"  IsChecked="{Binding RoomCheck,Mode=TwoWay}" />
            <CheckBox x:Name="ZoneCheck" Margin=" 0 12 0 0"  IsChecked="{Binding ZoneCheck,Mode=TwoWay}" />
        </StackPanel>

        <!--Documentation-->
        <StackPanel Grid.Row="2" Grid.Column="4" Grid.ColumnSpan="2" Margin="10 10 0 0" Style="{StaticResource Panel2}">
            <Label Content="Documentation" Style="{StaticResource Label}"/>
        </StackPanel>
        <StackPanel Grid.Row="3" Grid.Column="4"  Margin="10 5 0 0" Style="{StaticResource Panel2}">
            <Label Content="Documentation Link" Style="{StaticResource LabelLight}"/>
            <Label Content="Photo Link" Style="{StaticResource LabelLight}"/>
        </StackPanel>
        <StackPanel Grid.Row="3" Grid.Column="5"  Margin="10 5 10 0" Style="{StaticResource Panel2}">
            <CheckBox x:Name="DocLinkCheck" Margin=" 0 5 0 0"  IsChecked="{Binding DocLinkCheck,Mode=TwoWay}" />
            <CheckBox x:Name="PhotoLinkCheck" Margin=" 0 12 0 0"  IsChecked="{Binding PhotoLinkCheck,Mode=TwoWay}" />
        </StackPanel>
        <!--Classification-->
        <StackPanel Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Margin="5 0 0 0" Style="{StaticResource Panel2}">
            <Label Content="Classification" Style="{StaticResource Label}"/>
        </StackPanel>
        <StackPanel Grid.Row="5" Grid.Column="0"  Margin="10 5 0 0" Style="{StaticResource Panel2}">
            <Label Content="Classification" Style="{StaticResource LabelLight}"  />
            <Label Content="Material Type" Style="{StaticResource LabelLight}"  />
            <Label Content="Consequence Priority" Style="{StaticResource LabelLight}"  />
            <Label Content="Operation Status" Style="{StaticResource LabelLight}" />
        </StackPanel>
        <StackPanel Grid.Row="5" Grid.Column="1"  Margin="10 5 10 0" Style="{StaticResource Panel2}">
            <CheckBox x:Name="ClassificationCheck" Margin=" 0 5 0 0"  IsChecked="{Binding ClassificationCheck,Mode=TwoWay}" />
            <CheckBox x:Name="MaterialTypeCheck" Margin=" 0 12 0 0"  IsChecked="{Binding MaterialTypeCheck,Mode=TwoWay}" />
            <CheckBox x:Name="ConsequencePriorityCheck" Margin=" 0 12 0 0"  IsChecked="{Binding ConsequencePriorityCheck,Mode=TwoWay}" />
            <CheckBox x:Name="OperationStatusCheck" Margin=" 0 12 0 0"  IsChecked="{Binding OperationStatusCheck,Mode=TwoWay}" />
        </StackPanel>
        <!--Manufacturer-->
        <StackPanel Grid.Row="4" Grid.Column="2" Grid.ColumnSpan="2" Margin="5 0 0 0" Style="{StaticResource Panel2}">
            <Label Content="Manufacturer" Style="{StaticResource Label}"/>
        </StackPanel>
        <StackPanel Grid.Row="5" Grid.Column="2"  Margin="10 5 0 0" Style="{StaticResource Panel2}">
            <Label Content="Manufacturer" Style="{StaticResource LabelLight}"  />
            <Label Content="Year" Style="{StaticResource LabelLight}"   />
            <Label Content="Degradation Infor" Style="{StaticResource LabelLight}" />
            <Label Content="Detail" Style="{StaticResource LabelLight}"  />
        </StackPanel>
        <StackPanel Grid.Row="5" Grid.Column="3"  Margin="10 5 10 0" Style="{StaticResource Panel2}">
            <CheckBox x:Name="ManufacturerCheck" Margin=" 0 5 0 0"  IsChecked="{Binding ManufacturerCheck,Mode=TwoWay}" />
            <CheckBox x:Name="YearCheck" Margin=" 0 12 0 0"  IsChecked="{Binding YearCheck,Mode=TwoWay}" />
            <CheckBox x:Name="DegradationInforCheck" Margin=" 0 12 0 0"  IsChecked="{Binding DegradationInforCheck,Mode=TwoWay}" />
            <CheckBox x:Name="DetailCheck" Margin=" 0 12 0 0"  IsChecked="{Binding DetailCheck,Mode=TwoWay}" />
        </StackPanel>
        <!--Inspection-->
        <StackPanel Grid.Row="4" Grid.Column="4" Grid.ColumnSpan="2" Margin="5 0 0 0" Style="{StaticResource Panel2}">
            <Label Content="Inspection" Style="{StaticResource Label}"/>
        </StackPanel>
        <StackPanel Grid.Row="5" Grid.Column="4"  Margin="10 5 0 0" Style="{StaticResource Panel2}">
            <Label Content="Status" Style="{StaticResource LabelLight}" />
            <Label Content="Alarm Type" Style="{StaticResource LabelLight}"/>
            <Label Content="Collected By" Style="{StaticResource LabelLight}" />
            <Label Content="Colleted On" Style="{StaticResource LabelLight}" />
            <Label Content="Notes" Style="{StaticResource LabelLight}" />
            <Label Content="Photo Link" Style="{StaticResource LabelLight}" />
            <Label Content="Attachment Link" Style="{StaticResource LabelLight}" />
        </StackPanel>
        <StackPanel Grid.Row="5" Grid.Column="5"  Margin="10 5 10 0" Style="{StaticResource Panel2}">
            <CheckBox x:Name="InspectionStatusCheck" Margin=" 0 5 0 0"  IsChecked="{Binding InspectionStatusCheck,Mode=TwoWay}" />
            <CheckBox x:Name="AlarmTypeCheck" Margin=" 0 12 0 0"  IsChecked="{Binding AlarmTypeCheck,Mode=TwoWay}" />
            <CheckBox x:Name="CollectedByCheck" Margin=" 0 12 0 0"  IsChecked="{Binding CollectedByCheck,Mode=TwoWay}" />
            <CheckBox x:Name="CollectedOnCheck" Margin=" 0 12 0 0"  IsChecked="{Binding CollectedOnCheck,Mode=TwoWay}" />
            <CheckBox x:Name="NotesCheck" Margin=" 0 12 0 0"  IsChecked="{Binding NotesCheck,Mode=TwoWay}" />
            <CheckBox x:Name="InspectPhotoCheck" Margin=" 0 12 0 0"  IsChecked="{Binding InspectPhotoCheck,Mode=TwoWay}" />
            <CheckBox x:Name="AttachmentLinkCheck" Margin=" 0 12 0 0"  IsChecked="{Binding AttachmentLinkCheck,Mode=TwoWay}" />
        </StackPanel>

    </Grid>
</UserControl>
